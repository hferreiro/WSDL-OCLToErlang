context VoDKATVInterface
def: state_rooms:Sequence(String) = Sequence{}

context VoDKATVInterface::CreateRoom(roomId:String, description:String):Rooms
post CreateRoom:
    if ((roomId = "") or (roomId = null)) then
        self.state_rooms = self.state_rooms@pre and
        (result.errors->size() = 1) and
        result.errors->at(0).code = "required" and
        result.errors->at(0).params->size() = 1 and
        result.errors->at(0).params->at(0).name = "roomId" and
        result.errors->at(0).params->at(0).value = ""

    else
        if (self.state_rooms@pre->select(rId | rId = roomId)->notEmpty()) then
            self.state_rooms = self.state_rooms@pre and
            result.errors->size() = 1 and
            result.errors->at(0).code = "duplicated" and
            result.errors->at(0).params->size() = 1 and
            result.errors->at(0).params->at(0).name = "roomId" and
            result.errors->at(0).params->at(0).value = roomId
         else
            self.state_rooms = self.state_rooms@pre->including(roomId) and
            result.roomId = roomId and
            result.description = description
         endif
    endif

context VoDKATVInterface::FindRoomById(roomId:String):Room
post FindRoomById:
    if ((roomId = "") or (roomId = null)) then
        self.state_rooms = self.state_rooms@pre and
        (result.errors->size() = 1) and
        result.errors->at(0).code = "required" and
        result.errors->at(0).params->size() = 1 and
        result.errors->at(0).params->at(0).name = "roomId" and
        result.errors->at(0).params->at(0).value = ""
    else
        if (self.state_rooms@pre->select(rId | rId = roomId)->isEmpty()) then
            self.state_rooms = self.state_rooms@pre and
            result.errors->size() = 1 and
            result.errors->at(0).code = "not_found" and
            result.errors->at(0).params->size() = 1 and
            result.errors->at(0).params->at(0).name = "roomId" and
            result.errors->at(0).params->at(0).value = roomId
         else
            self.state_rooms = self.state_rooms@pre and
            result.roomId = roomId
         endif
    endif

context VoDKATVInterface::FindAllRooms():Rooms
post FindAllRooms:
    self.state_rooms = self.state_rooms@pre and
        result.room->size() = self.state_rooms->size() and
        self.state_rooms->includesAll(result.room -> collect(r | r.roomId)) and
        result.room -> collect(r | r.roomId) ->includesAll(self.state_rooms)

context VoDKATVInterface::DeleteRoom(roomId:String):Rooms
post DeleteRoom:
    if ((roomId = "") or (roomId = null)) then
        self.state_rooms = self.state_rooms@pre and
        (result.errors->size() = 1) and
        result.errors->at(0).code = "required" and
        result.errors->at(0).params->size() = 1 and
        result.errors->at(0).params->at(0).name = "roomId" and
        result.errors->at(0).params->at(0).value = ""
    else
        if (self.state_rooms@pre->select(rId | rId = roomId)->isEmpty()) then
            self.state_rooms = self.state_rooms@pre and
            result.errors->size() = 1 and
            result.errors->at(0).code = "not_found" and
            result.errors->at(0).params->size() = 1 and
            result.errors->at(0).params->at(0).name = "roomId" and
            result.errors->at(0).params->at(0).value = roomId
         else
            self.state_rooms = self.state_rooms@pre->excluding(roomId) and
            result.room->at(0).roomId = roomId
         endif
    endif
